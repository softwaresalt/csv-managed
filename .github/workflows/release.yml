name: Release

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  build-release:
    name: Build Release Binary
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-target-

      - name: Build binary
        run: cargo build --release

      - name: Authenticate with crates.io
        uses: crates-io/github-actions/authenticate@v1
        with:
          crate: csv-managed

      - name: Package binary
        run: |
          mkdir -p dist
          cp target/release/csv-managed dist/
          cd dist
          tar -czf csv-managed-${{ github.ref_name }}-${{ runner.os }}-x86_64.tar.gz csv-managed

      - name: Publish crate to crates.io
        run: cargo publish --locked

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: csv-managed-${{ github.ref_name }}-${{ runner.os }}-x86_64
          path: dist/*.tar.gz

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}